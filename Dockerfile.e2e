# deps
FROM node:18-alpine AS deps
RUN apk add --no-cache libc6-compat

WORKDIR /app

COPY package.json package-lock.json ./

RUN npm ci

# builder
FROM node:18 AS builder

WORKDIR /app

COPY --from=deps /app/node_modules ./node_modules
COPY . .

ARG DATABASE_URL
ENV DATABASE_URL=$DATABASE_URL
ENV NEXT_TELEMETRY_DISABLED 1

RUN npx prisma generate
RUN npm run build

# runner
FROM mcr.microsoft.com/playwright:jammy AS runner

RUN apt-get update && apt-get install -y locales && sed -i 's/^# \\(.*\\)/\\1/' /etc/locale.gen && locale-gen;
ENV LANG nl_NL.UTF-8  
ENV LANGUAGE nl_NL:nl  
ENV LC_ALL nl_NL.UTF-8  


WORKDIR /app

COPY --from=builder /app/package.json           package.json
COPY --from=builder /app/public                 public
COPY --from=builder /app/.next                  .next
COPY --from=builder /app/prisma                 ./prisma
COPY --from=builder /app/e2e                    e2e
COPY --from=builder /app/playwright.config.ts   playwright.config.ts
COPY --from=builder /app/node_modules           node_modules

EXPOSE 3001

ENV NEXT_TELEMETRY_DISABLED 1
ENV NODE_ENV production
ENV CI true
ENV PORT 3001

CMD ["npm", "run", "docker:e2e:start"]